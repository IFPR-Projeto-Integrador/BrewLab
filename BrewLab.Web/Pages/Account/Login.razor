@page "/account/login"
@inject AuthService authService
@inject NavigationManager navigation
@attribute [AllowAnonymous]


<MainForm @ref="Form">
    <MudTextField T="string"
                  Label="Login"
                  @bind-Value="Experimenter.UserName"
                  Variant="Variant.Filled" />
    <MudTextField T="string"
                  Label="Senha"
                  InputType="InputType.Password"
                  @bind-Value="Experimenter.Password"
                  Validation="@((string password) => ExperimenterDTO.ValidatePassword(password))"
                  Variant="Variant.Filled" />

    <div class="mb-2">
        <MudLink Href="/account/passwordResetEmail">Esqueci minha senha</MudLink>
    </div>

    <MudStack Row="true" Class="">
        <MudButton @onclick="LoginAsync"
                   Variant="Variant.Filled"
                   Color="Color.Primary">
            Login
        </MudButton>

        <MudSpacer />

        <MudButton @onclick="@(() => navigation.NavigateTo("/account/register"))"
                   Variant="Variant.Filled"
                   Color="Color.Primary">
            Cadastrar
        </MudButton>

    </MudStack>
</MainForm>


@code {
    private MainForm Form { get; set; } = default!;
    private ExperimenterDTO.Login Experimenter { get; set; } = new();

    private async Task LoginAsync()
    {
        if (!Form.Validate()) return;

        var result = await authService.Login(Experimenter);

        if (result.Success)
        {
            await authService.SetTokenLocalStorage(result.Token!);
            navigation.NavigateTo("/");
        }
        else
        {
            Form.AddErrors(result.Errors);
        }
    }
}
