@page "/account/register"
@inject NavigationManager navigation
@inject AuthService authService
@inject ISnackbar snackbar
@attribute [AllowAnonymous]

<MainForm @ref="Form">
    <MudTextField T="string"
                  Label="Login"
                  Validation="@((string login) => ExperimenterDTO.ValidateUserName(login))"
                  @bind-Value="Experimenter.UserName"
                  Variant="Variant.Filled" />
    <MudTextField T="string"
                  Label="Email" Required="true"
                  InputType="InputType.Email"
                  @bind-Value="Experimenter.Email"
                  Validation="@((string email) => ExperimenterDTO.ValidateEmail(email))"
                  Variant="Variant.Filled" />
    <MudTextField T="string"
                  Label="Nome"
                  Validation="@((string name) => ExperimenterDTO.ValidateName(name))"
                  @bind-Value="Experimenter.Name"
                  Variant="Variant.Filled" />
    <MudTextField T="string"
                  Label="Senha"
                  InputType="InputType.Password"
                  @bind-Value="Experimenter.Password"
                  Validation="@((string password) => ExperimenterDTO.ValidatePassword(password))"
                  Variant="Variant.Filled" />
    <MudTextField T="string"
                  Label="Senha"
                  InputType="InputType.Password"
                  @bind-Value="Experimenter.RepeatPassword"
                  Validation="@((string repeatPassword) => ExperimenterDTO.ValidateRepeatPassword(Experimenter.Password, repeatPassword))"
                  Variant="Variant.Filled" />

    <MudStack Class="mt-4" Row="true">
        <MudButton OnClick="RegisterAsync"
                   Variant="Variant.Filled"
                   Color="Color.Primary">Registrar</MudButton>

        <MudSpacer />

        <MudButton OnClick="@(() => navigation.NavigateTo("/account/login"))"
                   Variant="Variant.Filled"
                   Color="Color.Primary">Login</MudButton>
    </MudStack>
</MainForm>



@code {
    private MainForm Form { get; set; } = default!;
    private ExperimenterDTO.Register Experimenter { get; set; } = new();

    private async Task RegisterAsync()
    {
        if (!Form.Validate()) return;

        var result = await authService.Register(Experimenter);

        if (result.Success)
        {
            await authService.SetTokenLocalStorage(result.Token!);
            snackbar.Add("Conta cadastrada com sucesso!");
            navigation.NavigateTo("/");
        }
        else
        {
            Form.AddErrors(result.Errors);
        }
    }
}
