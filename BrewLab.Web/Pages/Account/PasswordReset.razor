@page "/account/passwordReset"
@inject NavigationManager navigation
@inject ExperimenterService experimenterService
@inject ISnackbar snackbar
@attribute [AllowAnonymous]

<MudStack Row="true" Justify="Justify.Center">
    <MudPaper Width="70%" Class="pa-4">
        <MudForm @ref="Form" @bind-IsValid="IsValid" Spacing="0">

            <MudTextField T="string"
                          Label="Login"
                          @bind-Value="Login"
                          Variant="Variant.Filled"
                          Validation="@((string login) => ExperimenterDTO.ValidateUserName(login))"
                          HelperText="Digite o nome de usuário da sua conta."
                          HelperTextOnFocus="true"/>

            <div class="mt-4">
                <MudButton @onclick="AttempSendResetEmailAsync"
                           Variant="Variant.Filled"
                           Color="Color.Primary">
                    Recuperar
                </MudButton>
            </div>

        </MudForm>
    </MudPaper>
</MudStack>

@code {
    private MudForm Form { get; set; } = default!;
    private bool IsValid { get; set; }

    private string Login { get; set; } = default!;

    public async Task AttempSendResetEmailAsync()
    {
        var baseUrl = navigation.BaseUri;
        var result = await experimenterService.SendPasswordRecoveryEmailAsync(Login, baseUrl);

        if (!result.Success)
        {
            snackbar.Add(result.Errors.FirstOrDefault(), Severity.Error);
            return;
        }
        else
        {
            snackbar.Add("Email enviado com sucesso. Verifique sua caixa de entrada, por favor.", Severity.Success);
            navigation.NavigateTo("/account/login");
        }
    }
}
