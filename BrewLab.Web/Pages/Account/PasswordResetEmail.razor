@page "/account/passwordResetEmail"
@inject NavigationManager navigation
@inject ExperimenterService experimenterService
@inject ISnackbar snackbar
@attribute [AllowAnonymous]

<MainForm @ref="Form">
    <MudTextField T="string"
                  Label="Login"
                  @bind-Value="Login"
                  Variant="Variant.Filled"
                  Validation="@((string login) => ExperimenterDTO.ValidateUserName(login))"
                  HelperText="Digite o nome de usuário da sua conta."
                  HelperTextOnFocus="true" />

    <div class="mt-4">
        <MudButton @onclick="AttempSendResetEmailAsync"
                   Variant="Variant.Filled"
                   Color="Color.Primary">
            Recuperar
        </MudButton>
    </div>
</MainForm>

@code {
    private MainForm Form { get; set; } = default!;
    private bool IsValid { get; set; }

    private string Login { get; set; } = default!;

    public async Task AttempSendResetEmailAsync()
    {
        if (!Form.Validate()) return;

        var baseUrl = navigation.BaseUri;
        var result = await experimenterService.SendPasswordRecoveryEmailAsync(Login, baseUrl);

        if (!result.Success)
        {
            Form.AddErrors(result.Errors);
            return;
        }
        else
        {
            snackbar.Add("Email enviado com sucesso. Verifique sua caixa de entrada, por favor.", Severity.Success);
            navigation.NavigateTo("/account/login");
        }
    }
}
