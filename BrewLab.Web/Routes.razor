@using BrewLab.Web.Extensions
@inject AuthService authService
@inject NavigationManager navigation

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
    </Router>
</CascadingAuthenticationState>


@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Authenticate();
        }
    }

    private async Task Authenticate()
    {
        var token = await authService.GetTokenLocalStorage();
        if (token is null)
        {
            await Reinitialize();
            return;
        }
        var user = await authService.Validate(token);
        if (user is null)
        {
            await Reinitialize();
            return;
        }

        navigation.ToReturnUrl(authService);
        StateHasChanged();
    }

    private async Task Reinitialize()
    {
        await authService.DeleteTokenLocalStorage();
        authService.HasAttemptedAuthentication = true;
        StateHasChanged();
    }


}
